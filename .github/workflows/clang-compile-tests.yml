name: compile code and tests

on:
  push:
    branches: [ main, develop, issue15_CI_workflow, tmp_debug_clang ]
  pull_request:
    branches: [ main, develop,  issue15_CI_workflow ]

jobs:

  clang-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: clang
      run: |
        brew install clang-format
        echo "Installed clang-format"
        echo "Changing directory to core/src"
        cd core/src
        echo "Running clang format in core/src"
        clang-format --dry-run -Werror *cpp include/*hpp
        echo "Changing directory back to root"
        cd -
        for component in physics
        do
          echo "Changing directory to $component/src"
          cd $component/src
          echo "Running clang format on $component/src"
          clang-format --dry-run -Werror *cpp include/*hpp
          echo "Changing directory back to root"
          cd -
        done
  
  
  build-on-ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        sudo apt-get update
        sudo apt-get install netcdf-bin libnetcdf-c++4-dev libboost-all-dev cmake
        git clone -b v2.x https://github.com/catchorg/Catch2.git
        cd Catch2
        cmake -Bbuild -H. -DBUILD_TESTING=OFF
        sudo cmake --build build/ --target install
        cd ..
    - name: make
      run: |
        cmake .
        make

  build-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        brew install netcdf
        brew install boost
        brew install catch2
        brew install cmake
    - name: make
      run: |
        cmake .
        make
        
        

  tests-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        brew install netcdf
        brew install boost
        brew install catch2
        brew install cmake
    - name: make
      run: |
        cmake .
        make        
    - name: run tests
      run: |
        cd core/test
        for file in $(ls test*); do ./$file; done
        cd -
        for component in physics
        do
            cd $component/test
            for file in $(ls test*); do ./$file; done
            cd -
        done

  
  tests-on-ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        sudo apt-get update
        sudo apt-get install netcdf-bin libnetcdf-c++4-dev libboost-all-dev cmake
        git clone -b v2.x https://github.com/catchorg/Catch2.git
        cd Catch2
        cmake -Bbuild -H. -DBUILD_TESTING=OFF
        sudo cmake --build build/ --target install
        cd ..
    - name: make
      run: |
        cmake .
        make
    - name: run tests
      run: |
        cd core/test
        for file in $(ls test*); do ./$file; done
        cd -
        for component in physics
        do
            cd $component/test
            for file in $(ls test*); do ./$file; done
            cd -
        done
